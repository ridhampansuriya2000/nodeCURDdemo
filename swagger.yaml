openapi: 3.0.0
info:
  title: CURD API
  description: API for login registration and CRUD opration base on login user
  version: 1.0.0
basePath: "/"
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
servers:
  - url: http://localhost:8080/
    description: Local server
  - url: https://node-curd-demo.vercel.app/
    description: Live server
components:
  securitySchemes:
#    ApiToken:
#      type: apiKey
#      in: header
#      name: Autherization

#    ApiTokenss:
#
#      type: http
#      scheme: basic
#    ApiTokenss:        # arbitrary name for the security scheme
#
#      type: http
#      scheme: bearer
#
#    ApiKey:        # arbitrary name for the security scheme
#      type: apiKey
#      in: header       # can be "header", "query" or "cookie"
#      name: apikey

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/":
    get:
      summary: Initial
      tags:
        - Initial
      responses:
        '200':
          description: Success
  "/auth/login":
    post:
      summary: Login
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ridhamtesting1@yopmail.com
                password:
                  type: string
                  example: Ridham@1234
              required:
                - email
                - password
      responses:
        '200':
          description: Success
  "/auth/signUp":
    post:
      summary: Sign Up
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: ridham
                lastName:
                  type: string
                  example: pansuriya
                email:
                  type: string
                  example: ridhampansuriya@yopmail.com
                password:
                  type: string
                  example: Tester@1234
                confirmPassword:
                  type: string
                  example: Tester@1234
              required:
                - firstName
                - lastName
                - email
                - password
                - confirmPassword
      responses:
        '200':
          description: Success
  "/auth/logout":
    get:
      security:
        - bearerAuth: []
      summary: Logout
      tags:
        - auth
      responses:
        '200':
          description: Success
  "/auth/user/me":
    get:
      security:
        - bearerAuth: []
      summary: Get User Details
      tags:
        - auth
      responses:
        '200':
          description: Success
  "/auth/update/profiles":
    post:
      security:
        - bearerAuth: []
      summary: Update User Profiles
      tags:
        - auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                phoneNum:
                  type: string
                  example: 75758123459
                image:
                  type: string
                  format: binary
                firstName:
                  type: string
                  example: ridham
                lastName:
                  type: string
                  example: pansuriya
                email:
                  type: string
                  example: ridhampansuriya@yopmail.com
              required:
                - phoneNum
                - image
                - firstName
                - lastName
                - email
      responses:
        '200':
          description: Success
  "/product/add":
    post:
      security:
        - ApiTokenss: []
      summary: Add Product
      tags:
        - product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                createdBy:
                  type: string
                name:
                  type: string
                email:
                  type: string
                productName:
                  type: string
                mobileNumber:
                  type: integer
                isAdmin:
                  type: boolean
              required:
                - name
                - email
                - productName
                - mobileNumber
                - isAdmin
      responses:
        '200':
          description: Success
  "/product/getList/{createdBy}":
    get:
      security:
        - bearerAuth: []
      summary: Get Product List
      tags:
        - product
      parameters:
        - in: path
          name: createdBy
          example: 64c02a32b72c460e73be6520
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  "/product/get/{_id}":
    get:
      security:
        - bearerAuth: []
      summary: Get Product by ID
      tags:
        - product
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  "/product/update/{id}":
    post:
      security:
        - bearerAuth: []
      summary: Update Product
      tags:
        - product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                productName:
                  type: string
                mobileNumber:
                  type: integer
                isAdmin:
                  type: boolean
              required:
                - name
                - email
                - productName
                - mobileNumber
                - isAdmin
      responses:
        '200':
          description: Success
  "/product/delete/{id}":
    delete:
      security:
        - bearerAuth: []
      summary: Delete Product
      tags:
        - product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
